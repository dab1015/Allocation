
@model  SNRWMSPortal.Models.RegisterEquipment

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>RegisterEquipment</h2>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    <script>
        $(function () {
            $('#dataTable').DataTable();
        })
        function GetDetails(id) {
            $.ajax({
                url: "/RegisterEquipment/EditEquipment/" + id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (response) {
                    $('#hfEquipmentId').val(response.EquipmentId);
                    $('#txtUpdateEquipmentDesc').val(response.EquipmentDesc);
                    $('#ddlEquipmentType').val(response.EquipmentType);
                    $('#txtUpdatePrimaryFunc').val(response.PrimaryFunc);
                    $('#txtUpdateSecondaryFunct').val(response.SecondaryFunc);
                    $('#ddlStatus').val(response.Status);
                    $('#modal-Update').modal('show');
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            return false;
        }
        function GetDetails2(id) {
            $.ajax({
                url: "/RegisterEquipment/Details/" + id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (response) {
                    $('#hfEquipmentId1').val(response.EquipmentId);
                    $('#txtUpdateEquipmentDesc1').val(response.EquipmentDesc);
                    $('#ddlEquipmentType1').val(response.EquipmentType);
                    $('#txtUpdatePrimaryFunc1').val(response.PrimaryFunc);
                    $('#txtUpdateSecondaryFunct1').val(response.SecondaryFunc);
                    $('#ddlStatus1').val(response.Status);
                    $('#modal-Details').modal('show');
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            return false;
        }
    </script>
</head>
<body>
    <p>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal-mrole">
            Add New Equipment
        </button>
    </p>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Equipment Records</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table cell-border table-responsive table-hover" id="dataTable" style="width:100%" cellspacing="0">
                    <thead>
                        <tr class="table-info">
                            @*<th>CustomerId</th>*@
                            <th>Equipment</th>
                            <th>Equipment Type</th>
                            <th>Primary Function</th>
                            <th>Secondary Function</th>
                            <th>Status</th>
                            <th>Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Equipments)
                        {
                            <tr>
                                @*<td>@Html.DisplayFor(module => item.CustomerId)</td>*@
                                <td>@Html.DisplayFor(module => item.EquipmentDesc)</td>
                                <td>@Html.DisplayFor(module => item.EquipmentType)</td>
                                <td>@Html.DisplayFor(module => item.PrimaryFunc)</td>
                                <td>@Html.DisplayFor(module => item.SecondaryFunc)</td>
                                <td>@Html.DisplayFor(module => item.Status)</td>
                                <td>
                                    <a onclick="GetDetails(@item.EquipmentId)">

                                        <i class="fa fa-edit btn btn-success "></i>
                                    </a>
                                    <a onclick="GetDetails2(@item.EquipmentId)">

                                        <i class="fa fa-list-ul btn btn-primary "></i>
                                    </a>
                                    @*<a>
                                            @Html.ActionLink(" ", "DeleteCustomer", "Customer", new { id = item.CustomerId }, new { onclick = "return confirm('Are sure wants to delete?');", @class = "fa fa-trash-o" })
                                        </a>*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div id="modal-mrole" class="modal fade" aria-modal="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Register Equipment</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("InsertEquipment", "RegisterEquipment", FormMethod.Post))
                    {
                        <div class="modal-body">
                            <div class="col-md-8">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EquipmentDesc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.TextBoxFor(m => m.EquipmentDesc, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.EquipmentDesc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EquipmentType, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(m => m.EquipmentType, new SelectList(ViewBag.EquipmentType, "Value", "Text"), "Select Equipment Type", htmlAttributes: new { @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.EquipmentType, "", new { @class = "badge badge-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PrimaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.TextBoxFor(m => m.PrimaryFunc, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.PrimaryFunc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecondaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.TextBoxFor(m => m.SecondaryFunc, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.SecondaryFunc, "", new { @class = "badge badge-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.StatusType, "Value", "Text"), "Select Status", htmlAttributes: new { @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "badge badge-danger" })
                                </div>

                            </div>
                            <br />

                            <div class="form-group">

                                <button type="submit" class="btn btn-primary ">Save</button>
                                <button type="button" class="btn btn-danger " data-dismiss="modal">Close</button>


                            </div>
                        </div>
                        @* <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                            </div>*@
                    }
                </div>
            </div>
        </div>
    </div>

    <div id="modal-Update" class="modal fade" aria-modal="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Update Equipment</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("UpdateEquipment", "RegisterEquipment", FormMethod.Post))
                    {
                        <div class="modal-body">
                            <div class="col-md-8">
                                <div class="form-group">
                                    @*<input type="hidden" id="hfEquipmentId" name="Id">*@
                                    @*<input type="text" id="hfEquipmentId" name="Id">*@
                                    @Html.HiddenFor(m => m.EquipmentId, new { @id = "hfEquipmentId" })
                                    @Html.LabelFor(m => m.EquipmentDesc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.EditorFor(model => model.EquipmentDesc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @id = "txtUpdateEquipmentDesc" } })
                                    @Html.ValidationMessageFor(m => m.EquipmentDesc, "", new { @class = "badge badge-danger text-danger" })
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.EquipmentType, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(m => m.EquipmentType, new SelectList(ViewBag.EquipmentType, "Value", "Text"), "Select Equipment Type", new { @id = "ddlEquipmentType", @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.EquipmentType, "", new { @class = "badge badge-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PrimaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.EditorFor(model => model.PrimaryFunc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @id = "txtUpdatePrimaryFunc" } })
                                    @Html.ValidationMessageFor(m => m.PrimaryFunc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecondaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.EditorFor(model => model.SecondaryFunc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @id = "txtUpdateSecondaryFunc" } })
                                    @Html.ValidationMessageFor(m => m.SecondaryFunc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusType, "Value", "Text"), "Select Status", new { @id = "ddlStatus", @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "badge badge-danger text-danger" })
                                </div>
                            </div>
                            <br />

                            <div class="form-group">

                                <button type="submit" class="btn btn-primary ">Update</button>
                                <button type="button" class="btn btn-danger " id="closeUpdateBtn">Close</button>
                            </div>
                        </div>
                        @* <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                            </div>*@
                    }
                </div>
            </div>
        </div>
    </div>

    <div id="peopleDetails" class="modal fade" aria-modal="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Details</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Details", "RegisterEquipment", FormMethod.Post))
                    {
                        <div class="modal-body">
                            <div class="col-md-8">

                                <div class="form-group">

                                    <div class="form-group">
                                        <input type="hidden" id="hfEqipmentId1" name="Id">
                                        @Html.LabelFor(m => m.EquipmentDesc, htmlAttributes: new { @class = "control-label col-md-6" })
                                        @Html.EditorFor(model => model.EquipmentDesc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @disabled = "disabled", @id = "txtUpdateEquipmentDesc1" } })
                                        @Html.ValidationMessageFor(m => m.EquipmentDesc, "", new { @class = "badge badge-danger text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EquipmentType, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(m => m.EquipmentType, new SelectList(ViewBag.EquipmentType, "Value", "Text"), "Select Equipment Type", new { @id = "ddlEquipmentType1", @disabled = "disabled", @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.EquipmentType, "", new { @class = "badge badge-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PrimaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.EditorFor(model => model.PrimaryFunc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @disabled = "disabled", @id = "txtUpdatePrimaryFunc1" } })
                                    @Html.ValidationMessageFor(m => m.PrimaryFunc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecondaryFunc, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.EditorFor(model => model.SecondaryFunc, new { htmlAttributes = new { @class = "form-control input-md", @required = "required", @disabled = "disabled", @id = "txtUpdateSecondaryFunc1" } })
                                    @Html.ValidationMessageFor(m => m.SecondaryFunc, "", new { @class = "badge badge-danger text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusType, "Value", "Text"), "Select Status", new { @id = "ddlStatus1", @disabled = "disabled", @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "badge badge-danger text-danger" })
                                </div>
                            </div>
                            <br />

                            <div class="form-group">


                                <button type="button" class="btn btn-danger " id="closeDetailsBtn">Close</button>
                            </div>
                        </div>
                        @* <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                            </div>*@
                    }
                </div>
            </div>
        </div>
    </div>

</body>
</html>
@section scripts{
    <script>

        $(function () {

            $('#closeUpdateBtn').click(function () {
                $('#modal-Update').modal('hide');
            })
            $('#closeDetailsBtn').click(function () {
                $('#modal-Details').modal('hide');
            })
        });
    </script>

}
